---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ default "jellyfin" .Values.name }}"
  namespace: {{ default "default" .Values.namespace }}
spec:
  replicas: {{ default 1 .Values.replicas }}
  selector:
    matchLabels:
      app: "{{ default "jellyfin" .Values.name }}"
  template:
    metadata:
      labels:
        app: "{{ default "jellyfin" .Values.name }}"
    spec:
      {{- if .Values.hwAccel.enabled }}
        {{- if eq .Values.hwAccel.type "nvidia" }}
      runtimeClassName: nvidia
        {{- end}}
      {{- end }}
      containers:
      - name: "{{ default "jellyfin" .Values.name }}"
        image: "docker.io/jellyfin/jellyfin:{{ default "10.10.7" .Values.versionOverride }}"
        {{- if .Values.hwAccel.enabled }}
          {{- if eq .Values.hwAccel.type "nvidia" }}
        resources:
          limits:
            nvidia.com/gpu: "1"
          requests:
            nvidia.com/gpu: "1"
          {{- else if eq .Values.hwAccel.type "intel" }}
        resources:
          limits:
            gpu.intel.com/i915: "1"
          requests:
            gpu.intel.com/i915: "1"
          {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8096
        volumeMounts:
        - name: config
          mountPath: /config
        - name: cache
          mountPath: /cache
        - name: media
          mountPath: /media
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: "{{ .Values.persistence.configClaim }}"
      - name: cache
        persistentVolumeClaim:
          claimName: "{{ .Values.persistence.cacheClaim }}"
      - name: media
        persistentVolumeClaim:
          claimName: "{{ .Values.persistence.mediaClaim }}"
